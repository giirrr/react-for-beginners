{"ast":null,"code":"var _jsxFileName = \"/Users/kne/Desktop/react-for-beginners/src/App.js\",\n  _s = $RefreshSig$();\nimport { useState, useEffect } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [loading, setLoading] = useState(true); //loading 글자를 띄울지 말지를 결정하는 함수\n  const [coins, setCoins] = useState([]);\n  const [myMoney, setMyMoney] = useState(0);\n  const [getCoin, setGetCoin] = useState(0);\n  useEffect(() => {\n    fetch(\"https://api.coinpaprika.com/v1/tickers\") // 정보 가져올 url\n    .then(response => response.json()) // url에서 가져온 정보를 json으로 변환\n    .then(json => {\n      setCoins(json); // 변환된 json을 coins(빈 array)에 넣기\n      setLoading(false); // loading 글자 지우기\n    });\n  }, []);\n  const writeMoney = e => setMyMoney(e.target.value);\n  const selectCoin = e => setGetCoin(e.target.value);\n  return (\n    /*#__PURE__*/\n    //함수 사이에 string 삽입 시: `~`, string 사이에 인자나 함수 삽입 시: ${~}\n    _jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: [\"the coins! \", loading ? null : `(${coins.length})`]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"number\",\n          value: myMoney,\n          onChange: writeMoney,\n          placeholder: \"WRITE UR USD\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 23,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 7\n      }, this), loading ? /*#__PURE__*/_jsxDEV(\"strong\", {\n        children: \"Loading...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 9\n      }, this) : /*#__PURE__*/_jsxDEV(\"select\", {\n        onChange: selectCoin,\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          children: \"select coin\"\n        }, \"-1\", false, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 11\n        }, this), coins.map((coin, index) => /*#__PURE__*/_jsxDEV(\"option\", {\n          value: coin.quotes.USD.price,\n          children: [coin.name, \"(\", coin.symbol, \"): $\", coin.quotes.USD.price.toFixed(2)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 13\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"h2\", {\n          children: [\"Coins you can buy:\", \" \", getCoin > 0 ? (myMoney / getCoin).toFixed(5) : null, \"`($\", coins.symbol, \")`\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 5\n    }, this)\n  );\n}\n_s(App, \"gX2zMCeZM9EUDf0gDH/Sc54ekAE=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useState","useEffect","jsxDEV","_jsxDEV","App","_s","loading","setLoading","coins","setCoins","myMoney","setMyMoney","getCoin","setGetCoin","fetch","then","response","json","writeMoney","e","target","value","selectCoin","children","length","fileName","_jsxFileName","lineNumber","columnNumber","type","onChange","placeholder","map","coin","index","quotes","USD","price","name","symbol","toFixed","_c","$RefreshReg$"],"sources":["/Users/kne/Desktop/react-for-beginners/src/App.js"],"sourcesContent":["import { useState, useEffect } from \"react\";\n\nfunction App() {\n  const [loading, setLoading] = useState(true); //loading 글자를 띄울지 말지를 결정하는 함수\n  const [coins, setCoins] = useState([]);\n  const [myMoney, setMyMoney] = useState(0);\n  const [getCoin, setGetCoin] = useState(0);\n  useEffect(() => {\n    fetch(\"https://api.coinpaprika.com/v1/tickers\") // 정보 가져올 url\n      .then((response) => response.json()) // url에서 가져온 정보를 json으로 변환\n      .then((json) => {\n        setCoins(json); // 변환된 json을 coins(빈 array)에 넣기\n        setLoading(false); // loading 글자 지우기\n      });\n  }, []);\n  const writeMoney = (e) => setMyMoney(e.target.value);\n  const selectCoin = (e) => setGetCoin(e.target.value);\n  return (\n    //함수 사이에 string 삽입 시: `~`, string 사이에 인자나 함수 삽입 시: ${~}\n    <div>\n      <h1>the coins! {loading ? null : `(${coins.length})`}</h1>\n      <div>\n        <input\n          type=\"number\"\n          value={myMoney}\n          onChange={writeMoney}\n          placeholder=\"WRITE UR USD\"\n        ></input>\n      </div>\n      {loading ? (\n        <strong>Loading...</strong>\n      ) : (\n        <select onChange={selectCoin}>\n          <option key=\"-1\">select coin</option>\n          {coins.map((coin, index) => (\n            <option key={index} value={coin.quotes.USD.price}>\n              {coin.name}({coin.symbol}): ${coin.quotes.USD.price.toFixed(2)}\n            </option>\n          ))}\n        </select>\n      )}\n      <div>\n        <h2>\n          Coins you can buy:{\" \"}\n          {getCoin > 0 ? (myMoney / getCoin).toFixed(5) : null}`(${coins.symbol}\n          )`\n        </h2>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}